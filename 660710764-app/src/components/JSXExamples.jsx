import React from "react";

function JSXExamples() {
    const greeting = <h1>Hello, React with JSX!!!</h1>
    const name = '‡∏ö‡∏£‡∏£‡∏•‡∏∏';
    const age = 20;

    const currentYear = new Date().getFullYear();

    const user = {
        firstName : '‡∏ö‡∏£‡∏£‡∏•‡∏∏',
        lastName :  '‡∏â‡∏¥‡∏°‡∏™‡∏¥‡∏á‡∏´‡πå',
        age : 20,
        hobbies : ['‡∏Å‡∏¥‡∏ô', '‡∏ô‡∏±‡πà‡∏á', '‡∏ô‡∏≠‡∏ô']
    };

    const formatName = (user) => {
        return `${user.firstName} ${user.lastName}`;
    }

    const isLoggedIn = true;
    const hasNotification = 3;

    return (
        <div className="jsx-examples" style={{
            background : '#282c34',
            color : '#ffffffff'
        }}>
            <br />
            <h1>JSX Example</h1>
            <section>
                <h2>‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>    
                {greeting}
                <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì {name} ‡∏≠‡∏≤‡∏¢‡∏∏ {age} ‡∏õ‡∏µ </p>
                <p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏õ‡∏µ {currentYear} </p>
                <p>‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á {formatName(user)} </p>
            </section>

            <section>
                <h2>Attributes ‡πÉ‡∏ô JSX</h2>
                <div className="Crad">
                    <p className="text-primary">‡πÉ‡∏ä‡πâ className ‡πÅ‡∏ó‡∏ô class</p>
                </div>
                <button 
                    onClick={() => alert('Button Cliked')}
                    onMouseEnter={() => console.log('Mouse Entered!')}>
                Hover me or Clike me!
                </button>

            <div style = {{
                backgroupColor : '#E8F4E8',
                padding : '15px',
                borderRadius : '8px',
                marginTop : '10px'
            }}>
                <p style = {{color: '#2D4A2B', fontWeight: 'bold'}}></p>
            </div>
            </section>

            <section>
                <h2>üîÄ Conditional Rendering</h2>
                <p>
                    ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {isLoggedIn ? '‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß' : '‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô'}
                </p>
                
                {hasNotification > 0 && (
                    <div className="notification">
                        üîî ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ {hasNotification} ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
                    </div>
                )}
                
                {(() => {
                    if (user.age >= 18) {
                        return <p>‚úÖ {formatName(user)} ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏õ‡∏´‡∏≤‡∏á‡∏≤‡∏ô‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß</p>;
                    } else {
                        return <p>üë∂ {formatName(user)} ‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏î‡πá‡∏Å ‡πÑ‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏õ ‡πÜ</p>;
                    }
                })()}
            </section>

            <section>
                <h2>üìã ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Lists</h2>
                <h3>‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á {user.firstName}:</h3>
                <ul>
                    {user.hobbies.map((hobby, index) => (
                        <li key={index}>
                            {index + 1}. {hobby}
                        </li>
                    ))}
                </ul>
                
                <div className="product-list">
                    <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
                    {[
                        { id: 1, name: '‡∏™‡∏µ‡πÑ‡∏°‡πâ', price: 199, inStock: true },
                        { id: 2, name: '‡∏™‡∏µ‡πÑ‡∏°‡πâ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà', price: 599, inStock: true },
                        { id: 3, name: '‡∏™‡∏µ‡πÑ‡∏°‡πâ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏°‡∏≤‡∏Å', price: 1599, inStock: false }
                    ].map(product => (
                        <div key={product.id} className="product-item">
                            <span>{product.name}</span>
                            <span> - ‡∏ø{product.price.toLocaleString()}</span>
                            <span className={product.inStock ? 'in-stock' : 'out-stock'}>
                                {product.inStock ? ' ‚úÖ ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' : ' ‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î'}
                            </span>
                        </div>
                    ))}
                </div>
            </section>

            <section>
                <h2>üß© React Fragment</h2>
                <p>‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ wrapper element:</p>
                
                <React.Fragment>
                    <h3>‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠</h3>
                    <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</p>
                </React.Fragment>
                <>
                    <h3>‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏≠‡∏∑‡πà‡∏ô</h3>
                    <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô</p>
                </>
            </section>

            <section>
                <h2>üéØ Event Handling ‡πÉ‡∏ô JSX</h2>
                <input 
                    type="text" 
                    placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ..."
                    onChange={(e) => console.log('‡∏û‡∏¥‡∏°‡∏û‡πå:', e.target.value)}
                />
                
                <select onChange={(e) => alert(`‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${e.target.value}`)}>
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤ --</option>
                    <option value="js">JavaScript</option>
                    <option value="py">Python</option>
                    <option value="java">Java</option>
                    <option value="go">Go</option>
                </select>
            </section>

            <section>
                <h2>üí¨ Comments ‡πÉ‡∏ô JSX</h2>
                <p>Comment ‡πÉ‡∏ô JSX ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô {}</p>
                {

                }
            </section>

            <br />
        </div>
    );
}

export default JSXExamples;